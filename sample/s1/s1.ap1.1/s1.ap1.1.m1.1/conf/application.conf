#framework name
name = "s1.ap1.1.m1.1"

#mail configurations
mail{
  api.url="http://warnemail.brandwisdom.cn:8002/WarningEmail/"
  #multi receiver, such as ["a1@b.com","a2@b.com"]
  to=["xx@sample.cn"]
  subject-prefix = "SubjectPrefix"
}

#system or application or module
type = "module"
log.dir = "/Users/deanzhang/work/code/github/lego-framework/sample/s1/"
#assembly的存放目录的绝对路径
assemblies-dir = "/Users/deanzhang/work/code/github/lego-framework/sample/s1/s1.ap1.1/s1.ap1.1.m1.1/assemblies"
#所有assembly的配置信息
assemblies = [
  {
    #assembly的唯一名称
    name = "s1.ap1.1.m1.1.a1"
    #assembly的执行顺序, 从1开始计数, 1为第一步
    index = 1
    #assembly的类型, cleaner表示该assembly是数据清洗任务, model表示该assembly是预测模型任务
    #options ["cleaner","model"]
    type = "cleaner"
    #assembly的jar文件名称
    jar-name = "lego-test-assembly-assembly-1.0.jar"
    #assembly实现framework接口的类的全路径
    class-name = "lego.test.Cleaner"
    #标识assembly是否可用, true为可用, false为不可用, 将忽略该assembly
    enable = "true"
  },
  {
    #assembly的唯一名称
    name = "s1.ap1.1.m1.1.a1.1"
    #assembly的执行顺序, 从1开始计数, 1为第一步
    index = 1.1
    #assembly的类型, cleaner表示该assembly是数据清洗任务, model表示该assembly是预测模型任务
    #options ["cleaner","model"]
    type = "cleaner"
    #assembly的jar文件名称
    jar-name = "lego-test-assembly-assembly-1.0.jar"
    #assembly实现framework接口的类的全路径
    class-name = "lego.test.Cleaner"
    #标识assembly是否可用, true为可用, false为不可用, 将忽略该assembly
    enable = "true"
  },
  {
    #assembly的唯一名称
    name = "s1.ap1.1.m1.1.a1.2"
    #assembly的执行顺序, 从1开始计数, 1为第一步
    index = 1.2
    #assembly的类型, cleaner表示该assembly是数据清洗任务, model表示该assembly是预测模型任务
    #options ["cleaner","model"]
    type = "cleaner"
    #assembly的jar文件名称
    jar-name = "lego-test-assembly-assembly-1.0.jar"
    #assembly实现framework接口的类的全路径
    class-name = "lego.test.Cleaner"
    #标识assembly是否可用, true为可用, false为不可用, 将忽略该assembly
    enable = "true"
  },
  {
    #assembly的唯一名称
    name = "s1.ap1.1.m1.1.a2"
    #assembly的执行顺序, 从1开始计数, 1为第一步
    index = 2
    #assembly的类型, cleaner表示该assembly是数据清洗任务, model表示该assembly是预测模型任务
    #options ["cleaner","model"]
    type = "cleaner"
    #assembly的jar文件名称
    jar-name = "lego-test-assembly-assembly-1.0.jar"
    #assembly实现framework接口的类的全路径
    class-name = "lego.test.Cleaner"
    #标识assembly是否可用, true为可用, false为不可用, 将忽略该assembly
    enable = "true"
  },
  {
    #assembly的唯一名称
    name = "s1.ap1.1.m1.1.a3"
    #assembly的执行顺序, 从1开始计数, 1为第一步
    index = 3
    #assembly的类型, cleaner表示该assembly是数据清洗任务, model表示该assembly是预测模型任务
    #options ["cleaner","model"]
    type = "cleaner"
    #assembly的jar文件名称
    jar-name = "lego-test-assembly-assembly-1.0.jar"
    #assembly实现framework接口的类的全路径
    class-name = "lego.test.Cleaner"
    #标识assembly是否可用, true为可用, false为不可用, 将忽略该assembly
    enable = "true"
  }
]

#assembly的参数配置
parameters = [
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "s1.ap1.1.m1.1.a1"
    throw-exception = false
    fc-date = "2017-05-01"
    test-enable = "false"
    fc-days = "14"
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "s1.ap1.1.m1.1.a1.1"
    throw-exception = false
    fc-date = "2017-05-01"
    test-enable = "false"
    fc-days = "14"
  },
  {
    name = "s1.ap1.1.m1.1.a1.2"
    throw-exception = false
    fc-date = "2017-05-01"
    test-enable = "false"
    fc-days = "14"
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "s1.ap1.1.m1.1.a2"
  	throw-exception = false
    fc-date = "2017-05-01"
    test-enable = "false"
    fc-days = "14"
  },
  {
    #(必填)assembly的唯一名称, 标识该参数列表属于哪个assembly
    name = "s1.ap1.1.m1.1.a3"
    throw-exception = false
    fc-date = "2017-05-01"
    test-enable = "false"
    fc-days = "14"
  }
]
